# This workflow will install Python dependencies, run tests, build an executable then upload it to github releases

name: Build & Release

on: 
  workflow_dispatch:


jobs:

  build:
    runs-on: windows-latest
    name: Build
    outputs:
      full_sha: ${{ steps.var.outputs.full_sha }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    
    - name: Crate Build Environment
      run: echo PATH=${GITHUB_WORKSPACE}/.venv/bin:$PATH >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install alive_progress bs4 nuitka requests

    - name: Build Executable
      run: |
        nuitka --assume-yes --onefile --windows-console-mode=force --windows-icon-from-ico="./icon/ylp_icon.ico" ylp_updater.py

    - name: Generate Build Info
      id: var
      run: |
        echo "full_sha=$(git rev-parse HEAD)" >> $env:GITHUB_OUTPUT
        echo "short_sha=$(git rev-parse --short HEAD)" >> $env:GITHUB_OUTPUT
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: binary
        path: |
          dist\ylp_updater.exe

  create_release:
    runs-on: ubuntu-latest
    name: Delete Old Release
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Delete Old Release
        id: delete_release
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const tag = "YLPU";

            const releases = await github.rest.repos.listReleases({
              owner: owner,
              repo: repo,
            });

            const release = releases.data.find(release => release.tag_name === tag);

            if (release) {
              await github.rest.repos.deleteRelease({
                owner: owner,
                repo: repo,
                release_id: release.id,
              });
              console.log(`Deleted release with ID ${release.id}`);
            } else {
              console.log("No existing release to delete");
            }

            try {
              await github.rest.git.deleteRef({
                owner: owner,
                repo: repo,
                ref: `tags/${tag}`,
              });
              console.log(`Deleted tag ${tag}`);
            } catch (error) {
              console.error(`Error deleting tag: ${error.message}`);
            }

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: binary
        
      - name: Echo Build SHA256
        id: build_sha
        run: |
          sha256sum ylp_updater.exe > sha256.checksum
          echo "build_sha=$(cat sha256.checksum)" >> $GITHUB_OUTPUT
          cat sha256.checksum

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          name: YimLaunchpad-Updater
          tag_name: YLPU
          body: |

              **This release has been built by Github Actions**

              [Link to build](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          files: |
            ylp_updater.exe
